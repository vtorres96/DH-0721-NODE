Na aula de hoje teremos um desafio, que consistirá em listar todos os repositórios dado um nome de usuário no github.

Para isso dividiremos nossas tarefas em 2 grandes blocos, o 1º bloco consistirá em lógica que aplicaremos caso o usuário exista, portanto,
deveremos seguir algumas instruções nesse bloco, caso contrário, deveremos exibir uma mensagem na tela indicando que o usuário não existe.

Passos para concluir a tarefa com excelência:
1º passo: criar um arquivo controller com o título GitHubController.js, no diretório controllers/
2º passo: criar a estrutura de module.exports e um método assíncrono entitulado index() dentro do arquivo GitHubController.js
3º passo: criar uma nova rota buscar-repositorios-por-usuario em routes/index.js que executará o método index() dentro do controller GitHubController.js

Agora que temos a estrutura básica de uma rota executando um método específico dentro de nosso controller, vamos trabalhar a etapa de importação do axios no projeto:
Passos para concluir a tarefa de importação e criação do serviço com axios:
1º passo: executar o comando npm install axios
2º passo: criar um arquivo api.js, no diretório config/
3º passo: criar a instância do axios e exportá-la (lembre-se, fizemos isso na aula de segunda-feira, como base você pode conferir o arquivo da aula anterior)
4º passo: dentro do arquivo config/api.js, alterar na propriedade baseURL o valor para a URL da API do Github, que está informada a seguir:
https://api.github.com/users

Agora que concluimos o arquivo que irá nos ajudar a trabalhar com axios para enviar as requisições, devemos voltar para o GitHubController.js
Passos para efetuar a requisição e obter dados da API do GitHub:
1º passo: importar a instância do axios para poder enviar a requisição
2º passo: dentro do método index() no arquivo GitHubController.js, deverá utilizar o método get() do axios, porém, deveremos concatenar a URL desejada para efetuar a requisição, logo deveremos obter a seguinte URL: https://api.github.com/users/nome-do-usuario-github/repos
Para isso, lembre-se que vocês já possuem a baseURL que é https://api.github.com/users, logo, no método get() do axios deverá concatenar apenas a string a seguir:
/nome-do-usuario-github/repos para ter sucesso ao enviar a requisição.
3º passo: após receber o retorno da requisição, utilizar o método res.render, para retornar uma view (vocês já terão essa view pronta, porém, com dados fictícios) com uma propriedade repositorios, que irá conter o array de objetos com todos repositórios obtidos daquele usuário

Com o backend concluído, deveremos entrar na nossa view e percorrer os repositórios para listá-los na tela
1ª passo: utilize o método foreach para percorrer o array de repositórios que obtemos na requisição, listando apenas as propriedades a seguir: html_url e name do repositório
2º passo: visualize no navegador